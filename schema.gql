# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""The Categories model"""
type ActorEntity {
  birthDate: DateTime!
  birthPlace: String!
  gender: String!
  idActor: ID!
  name: String!
  nationality: String!
}

input ActorInput {
  birthDate: DateTime!
  birthPlace: String!
  gender: String!
  name: String!
  nationality: String!
}

"""The Categories model"""
type AuthorEntity {
  description: String!
  idAuthor: ID!
  name: String!
}

input AuthorInput {
  description: String!
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""The Categories model"""
type MovieEntity {
  author: AuthorEntity!
  genre: String!
  idAuthor: Float!
  idMovie: ID!
  name: String!
  year: Float!
}

input MovieInput {
  idAuthor: Float!
  name: String!
  year: Float!
}

type Mutation {
  insertNewActor(newActorData: ActorInput!): ActorEntity!
  insertNewAuthor(newAuthorData: AuthorInput!): AuthorEntity!
  insertNewMovie(newMovieData: MovieInput!): MovieEntity!
  updateActor(idActor: Float!, updateDate: ActorInput!): ActorEntity!
  updateAuthor(idAuthor: Float!, updateDate: AuthorInput!): AuthorEntity!
  updateMovie(idMovie: Float!, updateDate: MovieInput!): MovieEntity!
}

type Query {
  findActorById(id: Float!): ActorEntity!
  findAuthorById(id: Float!): AuthorEntity!
  findMovieById(id: Float!): MovieEntity!
  getAllActors: [ActorEntity!]!
  getAllAuthors: [AuthorEntity!]!
  getAllMovies: [MovieEntity!]!
}
